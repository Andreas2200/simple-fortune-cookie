name: Main CI
on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'
env:
  docker_username: ${{ secrets.DOCKER_USERNAME }}
  docker_password: ${{ secrets.DOCKER_PASSWORD }}
jobs:
  Clone-down:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Upload frontend
        uses: actions/upload-artifact@v2
        with:
          name: frontend
          path: frontend/
      - name: Upload backend
        uses: actions/upload-artifact@v2
        with:
          name: backend
          path: backend/
      - name: Upload kubernetes
        uses: actions/upload-artifact@v2
        with:
          name: kubernetes
          path: kubernetes/
  Build-Backend:
    runs-on: ubuntu-latest
    needs: Clone-down
    container: golang:1.19-alpine
    steps:
      - name: Download
        uses: actions/download-artifact@v2
        with:
          name: backend
          path: .
      - name: Download Redigo
        run: go mod download github.com/gomodule/redigo
      - name: Build Binary
        run: CGO_ENABLED=0 go build backend/
      - name: Upload Binary
        uses: actions/upload-artifact@v2
        with:
          name: backend-binary
          path: backend
      - name: Upload backend
        uses: actions/upload-artifact@v2
        with:
          name: backend
          path: .
  Build-Frontend:
    runs-on: ubuntu-latest
    needs: Clone-down
    container: golang:1.19-alpine
    steps:
      - name: Download
        uses: actions/download-artifact@v2
        with:
          name: frontend
          path: .
      - name: Check dir
        run: ls
      - name: Build Binary
        run: CGO_ENABLED=0 go build .
      - name: Upload Binary
        uses: actions/upload-artifact@v2
        with:
          name: frontend-binary
          path: frontend
      - name: Upload frontend
        uses: actions/upload-artifact@v2
        with:
          name: frontend
          path: .
  Docker-backend-image:
    runs-on: ubuntu-latest
    needs: Build-backend
    steps:
      - name: Download backend
        uses: actions/download-artifact@v2
        with:
          name: backend
          path: .
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/simple-fortune-cookie-backend:dev
  Docker-frontend-image:
    runs-on: ubuntu-latest
    needs: Build-frontend
    steps:
      - name: Download frontend
        uses: actions/download-artifact@v2
        with:
          name: frontend
          path: .
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/simple-fortune-cookie-frontend:dev
  Deploy-To-Development:
    runs-on: Development
    needs: [Docker-frontend-image, Docker-backend-image]
    steps:
      - name: Download kubernetes
        uses: actions/download-artifact@v2
        with:
          name: kubernetes
          path: .
      - name: Deploy redis server
        run: kubectl apply -f dev/redis.yml
      - name: Redeploy app
        run: kubectl delete -f dev/frontback.yml && kubectl apply -f dev/frontback.yml
